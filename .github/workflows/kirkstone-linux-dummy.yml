name: kirkstone-linux-dummy

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  linux-dummy:

    env:
      YOCTO_BRANCH: kirkstone

    runs-on: [self-hosted, linux]

    container:
      image: ghcr.io/meta-flutter/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1001:1001
        --ipc host
        --privileged
        --pid host
        --userns keep-id
        --ulimit host 
        --mount type=devpts,destination=/dev/pts
        --security-opt label=disable
        --group-add keep-groups
        --pids-limit 5000
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/latest:/home/dev/sstate:Z

    steps:

      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../yocto-kirkstone ] || mkdir -p ../yocto-kirkstone
          cd ../yocto-kirkstone
          pwd
          ls -la
          rm -rf poky meta-openembedded meta-clang
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/kraj/meta-clang.git &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          rm -rf build/conf
          . ./poky/oe-init-build-env
          echo '***************************************'
          echo 'INHERIT += "rm_work"' >> ./conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES:remove = "sysvinit"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES:append = " x11 wayland opengl"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_BACKFILL_CONSIDERED = ""' >> ./conf/local.conf
          echo 'INHIBIT_PACKAGE_DEBUG_SPLIT = "1"' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_virtual/kernel = "linux-dummy"' >> ./conf/local.conf
          echo 'LICENSE_FLAGS_ACCEPTED += "commercial"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-ffmpeg = " openssl"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-flutter-auto = " gstreamer"' >> conf/local.conf
          echo 'PACKAGECONFIG:append:pn-flutter-engine = " desktop-embeddings"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = " \
              gstreamer1.0 \
              gstreamer1.0-libav \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-base \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-ugly \
              ffmpeg \
              "' >> ./conf/local.conf
          echo 'PACKAGE_CLASSES = "package_ipk"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          bitbake-layers add-layer \
              ../meta-openembedded/meta-oe \
              ../meta-openembedded/meta-python \
              ../meta-openembedded/meta-networking \
              ../meta-clang \
              ../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e core-image-minimal | grep "^DISTRO_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake ca-certificates -c do_cleansstate
          bitbake ca-certificates-native -c do_cleansstate
          bitbake flutter-sdk-native -c do_cleansstate
          bitbake ncurses-native -c do_cleansstate
          bitbake ncurses -c do_cleansstate

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake core-image-minimal -c do_cleansstate
          bitbake core-image-minimal

      - name: Build flutter-engine
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-engine -c do_cleansstate
          bitbake flutter-engine

      - name: Build membrane-example
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake membrane-example -c do_cleansstate
          bitbake membrane-example-native -c do_cleansstate

      - name: Build flutter-auto
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-auto -c do_cleansstate
          bitbake flutter-auto

      - name: Build flutter-pi
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-pi -c do_cleansstate
          bitbake flutter-pi

      - name: Build ivi-homescreen
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake ivi-homescreen -c do_cleansstate
          bitbake ivi-homescreen

      - name: Build flutter-drm-eglstream-backend
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-drm-eglstream-backend -c do_cleansstate
          bitbake flutter-drm-eglstream-backend

      - name: Build drm gbm backend
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-drm-gbm-backend -c do_cleansstate
          bitbake flutter-drm-gbm-backend

      - name: Build external texture plugin
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-external-texture-plugin -c do_cleansstate
          bitbake flutter-external-texture-plugin

      - name: Build Wayland Client
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-wayland-client -c do_cleansstate
          bitbake flutter-wayland-client

      - name: Build X11 Client
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-x11-client -c do_cleansstate
          bitbake flutter-x11-client

      - name: Build flutter-gallery
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-gallery -c do_cleansstate
          bitbake flutter-gallery

      - name: Build flutter-test-texture-egl
        shell: bash
        working-directory: ../yocto-kirkstone
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-test-texture-egl -c do_cleansstate
          bitbake flutter-test-texture-egl
